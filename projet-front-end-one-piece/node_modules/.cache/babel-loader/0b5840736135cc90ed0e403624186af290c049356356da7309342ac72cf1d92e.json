{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import Navigation from\"../components/Navigation\";import axios from\"axios\";import{jwtDecode}from\"jwt-decode\";import ListeCartes from\"../components/ListeCartes\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Builder=()=>{const[userData,setUserData]=useState(null);const[deck,setDeck]=useState([]);useEffect(()=>{const token=localStorage.getItem(\"token\");if(!token){// Si aucun token, redirige vers la page de connexion ou traite l'absence de token\nconsole.error(\"Aucun token trouvé, redirection vers la page de connexion\");localStorage.removeItem(\"token\");window.location.href=\"/connexion\";return;}try{const decodedToken=jwtDecode(token);const pseudo=decodedToken.pseudo;// Exemple de vérification du token\naxios.get(`http://jsonplaceholder.typicode.com/posts`,{headers:{Authorization:`Bearer ${token}`}}).then(response=>{setUserData(response.data);}).catch(error=>{console.error(\"Erreur lors de la récupération du profil:\",error);localStorage.removeItem(\"token\");window.location.href=\"/connexion\";});}catch(error){console.error(\"Erreur lors du décodage du token:\",error);localStorage.removeItem(\"token\");window.location.href=\"/connexion\";}},[]);useEffect(()=>{axios.get(`http://192.168.1.16:3001/deck`).then(response=>{setDeck(response.data);});},[]);// Dépendances vides, s'exécute une seule fois au montage du composant\nconst AjouterCarteAuDeck=carte=>{axios.post(`http://192.168.1.16:3001/deck`,carte).then(()=>{setDeck(prevDeck=>[...prevDeck,carte]);});};const supprimerCarteDuDeck=carteId=>{axios.delete(`http://192.168.1.16:3001/deck/${carteId}`).then(response=>{setDeck(prevDeck=>prevDeck.filter(carte=>carte.id!==carteId));// Mettre à jour le state\nconsole.log(\"Carte supprimée:\",response.data);}).catch(error=>{console.error(\"Erreur lors de la suppression de la carte:\",error);});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navigation,{}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Builder\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"cartebuilder\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"cartedanslebuilder\",children:/*#__PURE__*/_jsx(ListeCartes,{AjouterCarteAuDeck:AjouterCarteAuDeck})}),/*#__PURE__*/_jsxs(\"div\",{className:\"carteajoutedeck\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Mon deck\"}),deck.length>0?/*#__PURE__*/_jsx(\"ul\",{children:deck.map((carte,index)=>/*#__PURE__*/_jsx(\"li\",{onClick:()=>supprimerCarteDuDeck(carte.id),children:/*#__PURE__*/_jsx(\"img\",{src:`http://192.168.1.16:3001${carte.image_url}`,alt:carte.nom,className:\"cartedeck\"})},carte.id||index))}):/*#__PURE__*/_jsx(\"p\",{children:\"Aucune carte dans le deck\"})]})]})]})]});};export default Builder;","map":{"version":3,"names":["React","useState","useEffect","Navigation","axios","jwtDecode","ListeCartes","jsx","_jsx","jsxs","_jsxs","Builder","userData","setUserData","deck","setDeck","token","localStorage","getItem","console","error","removeItem","window","location","href","decodedToken","pseudo","get","headers","Authorization","then","response","data","catch","AjouterCarteAuDeck","carte","post","prevDeck","supprimerCarteDuDeck","carteId","delete","filter","id","log","children","className","length","map","index","onClick","src","image_url","alt","nom"],"sources":["C:/Users/plich/Desktop/projet-complet-one-piece/projet-front-end-one-piece/src/pages/Builder.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Navigation from \"../components/Navigation\";\r\nimport axios from \"axios\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport ListeCartes from \"../components/ListeCartes\";\r\n\r\nconst Builder = () => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [deck, setDeck] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    if (!token) {\r\n      // Si aucun token, redirige vers la page de connexion ou traite l'absence de token\r\n      console.error(\r\n        \"Aucun token trouvé, redirection vers la page de connexion\"\r\n      );\r\n      localStorage.removeItem(\"token\");\r\n      window.location.href = \"/connexion\";\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const decodedToken = jwtDecode(token);\r\n      const pseudo = decodedToken.pseudo;\r\n\r\n      // Exemple de vérification du token\r\n      axios\r\n        .get(`http://jsonplaceholder.typicode.com/posts`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          setUserData(response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Erreur lors de la récupération du profil:\", error);\r\n          localStorage.removeItem(\"token\");\r\n          window.location.href = \"/connexion\";\r\n        });\r\n    } catch (error) {\r\n      console.error(\"Erreur lors du décodage du token:\", error);\r\n      localStorage.removeItem(\"token\");\r\n      window.location.href = \"/connexion\";\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://192.168.1.16:3001/deck`).then((response) => {\r\n      setDeck(response.data);\r\n    });\r\n  }, []); // Dépendances vides, s'exécute une seule fois au montage du composant\r\n  const AjouterCarteAuDeck = (carte) => {\r\n    axios.post(`http://192.168.1.16:3001/deck`, carte).then(() => {\r\n      setDeck((prevDeck) => [...prevDeck, carte]);\r\n    });\r\n  };\r\n\r\n  const supprimerCarteDuDeck = (carteId) => {\r\n    axios\r\n      .delete(`http://192.168.1.16:3001/deck/${carteId}`)\r\n      .then((response) => {\r\n        setDeck((prevDeck) => prevDeck.filter((carte) => carte.id !== carteId)); // Mettre à jour le state\r\n        console.log(\"Carte supprimée:\", response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erreur lors de la suppression de la carte:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <div>\r\n        <h1>Builder</h1>\r\n        <div className=\"cartebuilder\">\r\n          <div className=\"cartedanslebuilder\">\r\n            <ListeCartes AjouterCarteAuDeck={AjouterCarteAuDeck} />\r\n          </div>\r\n          <div className=\"carteajoutedeck\">\r\n            <h2>Mon deck</h2>\r\n            {deck.length > 0 ? (\r\n              <ul>\r\n                {deck.map((carte, index) => (\r\n                  <li\r\n                    key={carte.id || index}\r\n                    onClick={() => supprimerCarteDuDeck(carte.id)}\r\n                  >\r\n                    <img\r\n                      src={`http://192.168.1.16:3001${carte.image_url}`}\r\n                      alt={carte.nom}\r\n                      className=\"cartedeck\"\r\n                    />\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p>Aucune carte dans le deck</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Builder;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,UAAU,KAAM,0BAA0B,CACjD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,SAAS,KAAQ,YAAY,CACtC,MAAO,CAAAC,WAAW,KAAM,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpD,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACpB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAC9C,KAAM,CAACa,IAAI,CAAEC,OAAO,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAEpCC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAc,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAE3C,GAAI,CAACF,KAAK,CAAE,CACV;AACAG,OAAO,CAACC,KAAK,CACX,2DACF,CAAC,CACDH,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC,CAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,YAAY,CACnC,OACF,CAEA,GAAI,CACF,KAAM,CAAAC,YAAY,CAAGpB,SAAS,CAACW,KAAK,CAAC,CACrC,KAAM,CAAAU,MAAM,CAAGD,YAAY,CAACC,MAAM,CAElC;AACAtB,KAAK,CACFuB,GAAG,CAAC,2CAA2C,CAAE,CAChDC,OAAO,CAAE,CACPC,aAAa,CAAE,UAAUb,KAAK,EAChC,CACF,CAAC,CAAC,CACDc,IAAI,CAAEC,QAAQ,EAAK,CAClBlB,WAAW,CAACkB,QAAQ,CAACC,IAAI,CAAC,CAC5B,CAAC,CAAC,CACDC,KAAK,CAAEb,KAAK,EAAK,CAChBD,OAAO,CAACC,KAAK,CAAC,2CAA2C,CAAEA,KAAK,CAAC,CACjEH,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC,CAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,YAAY,CACrC,CAAC,CAAC,CACN,CAAE,MAAOJ,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,mCAAmC,CAAEA,KAAK,CAAC,CACzDH,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC,CAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,YAAY,CACrC,CACF,CAAC,CAAE,EAAE,CAAC,CAENtB,SAAS,CAAC,IAAM,CACdE,KAAK,CAACuB,GAAG,CAAC,+BAA+B,CAAC,CAACG,IAAI,CAAEC,QAAQ,EAAK,CAC5DhB,OAAO,CAACgB,QAAQ,CAACC,IAAI,CAAC,CACxB,CAAC,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CAAE;AACR,KAAM,CAAAE,kBAAkB,CAAIC,KAAK,EAAK,CACpC/B,KAAK,CAACgC,IAAI,CAAC,+BAA+B,CAAED,KAAK,CAAC,CAACL,IAAI,CAAC,IAAM,CAC5Df,OAAO,CAAEsB,QAAQ,EAAK,CAAC,GAAGA,QAAQ,CAAEF,KAAK,CAAC,CAAC,CAC7C,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAG,oBAAoB,CAAIC,OAAO,EAAK,CACxCnC,KAAK,CACFoC,MAAM,CAAC,iCAAiCD,OAAO,EAAE,CAAC,CAClDT,IAAI,CAAEC,QAAQ,EAAK,CAClBhB,OAAO,CAAEsB,QAAQ,EAAKA,QAAQ,CAACI,MAAM,CAAEN,KAAK,EAAKA,KAAK,CAACO,EAAE,GAAKH,OAAO,CAAC,CAAC,CAAE;AACzEpB,OAAO,CAACwB,GAAG,CAAC,kBAAkB,CAAEZ,QAAQ,CAACC,IAAI,CAAC,CAChD,CAAC,CAAC,CACDC,KAAK,CAAEb,KAAK,EAAK,CAChBD,OAAO,CAACC,KAAK,CAAC,4CAA4C,CAAEA,KAAK,CAAC,CACpE,CAAC,CAAC,CACN,CAAC,CAED,mBACEV,KAAA,QAAAkC,QAAA,eACEpC,IAAA,CAACL,UAAU,GAAE,CAAC,cACdO,KAAA,QAAAkC,QAAA,eACEpC,IAAA,OAAAoC,QAAA,CAAI,SAAO,CAAI,CAAC,cAChBlC,KAAA,QAAKmC,SAAS,CAAC,cAAc,CAAAD,QAAA,eAC3BpC,IAAA,QAAKqC,SAAS,CAAC,oBAAoB,CAAAD,QAAA,cACjCpC,IAAA,CAACF,WAAW,EAAC4B,kBAAkB,CAAEA,kBAAmB,CAAE,CAAC,CACpD,CAAC,cACNxB,KAAA,QAAKmC,SAAS,CAAC,iBAAiB,CAAAD,QAAA,eAC9BpC,IAAA,OAAAoC,QAAA,CAAI,UAAQ,CAAI,CAAC,CAChB9B,IAAI,CAACgC,MAAM,CAAG,CAAC,cACdtC,IAAA,OAAAoC,QAAA,CACG9B,IAAI,CAACiC,GAAG,CAAC,CAACZ,KAAK,CAAEa,KAAK,gBACrBxC,IAAA,OAEEyC,OAAO,CAAEA,CAAA,GAAMX,oBAAoB,CAACH,KAAK,CAACO,EAAE,CAAE,CAAAE,QAAA,cAE9CpC,IAAA,QACE0C,GAAG,CAAE,2BAA2Bf,KAAK,CAACgB,SAAS,EAAG,CAClDC,GAAG,CAAEjB,KAAK,CAACkB,GAAI,CACfR,SAAS,CAAC,WAAW,CACtB,CAAC,EAPGV,KAAK,CAACO,EAAE,EAAIM,KAQf,CACL,CAAC,CACA,CAAC,cAELxC,IAAA,MAAAoC,QAAA,CAAG,2BAAyB,CAAG,CAChC,EACE,CAAC,EACH,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAjC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}